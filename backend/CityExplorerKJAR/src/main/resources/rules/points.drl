package com.rules;
import com.sbnz.CityExplorer.model.Activity;
import com.sbnz.CityExplorer.model.ActivityRequirements;
import com.sbnz.CityExplorer.model.Location;
import com.sbnz.CityExplorer.model.Features;
import com.sbnz.CityExplorer.util.ScoreCalculator;
import com.sbnz.CityExplorer.dto.UserRequirementsDTO;
import com.sbnz.CityExplorer.dto.ActivityDTO;
import com.sbnz.CityExplorer.util.FinishedProcessingRequirements;
import java.lang.Integer;
import java.util.*;

global Activity best;
global ScoreCalculator calc;

declare FoundBest
end;

rule "The Best Restaurant" 
	agenda-group "recommend"
	salience(  calc.calculateScore($activity,$req) )
    when
		$req: ActivityRequirements();
		$activity: Activity($name: name, $score: score);
		FinishedProcessingRequirements();
		not FoundBest()
    then	
    	best = $activity;
    	drools.getKnowledgeRuntime().setGlobal("best", $activity);
    	System.out.println("===== Activity: " + $name + "is the best with score: " + $score + " ===== ");  
	    insert( new FoundBest() );
end;

rule "Reset score for activities to 0"
    agenda-group "recommend"
    salience -50
    lock-on-active 
    enabled true
    when
		$a : Activity()
    then
    	modify($a){setScore(0)};
        System.out.println( "Score reset to " + $a.getScore() + " for " + $a.getName());
end;
